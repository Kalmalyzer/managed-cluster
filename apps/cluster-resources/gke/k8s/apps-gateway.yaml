# Create a load balancer for incoming traffic
# This can be used by individual applications for routing incoming HTTP(S) traffic
# We share a single load balancer to reduce costs

apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
  name: apps
  namespace: cluster-resources
spec:
  # Create a Global HTTP(S) Load Balancer
  gatewayClassName: gke-l7-global-external-managed

  # Attach load balancer to a predefined static IP address
  # This ensures that the IP is known and constant, regardless of the life cycle of this load balancer
  #   and therefore, any manually-managed DNS entries that point to the IP address also remain valid, regardless of the life cycle of this load balancer
  # Reference: https://cloud.google.com/kubernetes-engine/docs/how-to/gatewayclass-capabilities#spec-addresses
  # Reference: https://cloud.google.com/kubernetes-engine/docs/how-to/deploying-gateways#use_a_named_ip_address
  addresses:
    - type: NamedAddress
      value: apps-external-ip

  listeners:
    # Allow incoming traffic on port 80
    # This traffic will immediately get redirected to port 443 using an HTTPRoute
    - name: http
      protocol: HTTP
      port: 80
      allowedRoutes:
        kinds:
          - kind: HTTPRoute

        # Only allow HTTPRoutes that are in namespaces that have the 'shared-gateway-access' label to refer to this gateway
        namespaces:
          from: Selector
          selector:
            matchLabels:
              shared-gateway-access: "true"

    # Allow incoming traffic on port 443
    # This is the real traffic to any services
    - name: https
      protocol: HTTPS
      port: 443
      tls:
        # Terminate SSL within the load balancer
        mode: Terminate
        options:
          # The SSL certificates are managed by GCP, and created via Terraform
          # While we would like to manage the certificates via GKE, the Gateway controller does not support ManagedCertificate; only the Ingress controller does
          # Reference: https://cloud.google.com/kubernetes-engine/docs/how-to/secure-gateway#restrictions_and_limitations
          # This is a comma-separated list of certificate IDs; see infra/gke/cluster/terraform.tfvars for the list of certs
          networking.gke.io/pre-shared-certs: argocd-kalms-org-1
      allowedRoutes:
        # Only allow HTTPRoutes that are in namespaces that have the 'shared-gateway-access' label to refer to this gateway
        namespaces:
          from: Selector
          selector:
            matchLabels:
              shared-gateway-access: "true"
